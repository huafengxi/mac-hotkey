#+Title: global hotkey utility

* start
only run on macOS.
: git clone git@github.com:huafengxi/mac-hotkey.git
: cd mac-hotkey
: ./xboard.sh start
** deps
see [[install-pylib.sh]]

[[deps/gets.sh]] and [[deps/msg.sh]] are also used by =trigger.py=

* hotkey config
[[hk.map]], see trigger actions.

* how hotkey works
  multiple process connected by pipe, each process just do one simple task.

The most important 3 scripts:
1. =hotkey2.py= capture hotkey
2.  =sel.py= select actions
3.  =trigger.py= do actions。

The actual launch command:
: x-pylib/s -c $base_dir/hotkey2.py| $base_dir/sel.py $base_dir/hk.map ': (.*) ###%s' | $base_dir/feed2.py $base_dir/trigger.py
1. =x-pylib/s= is used to gain root privilege.
2. =hotkey2.py= is used to detect hotkey，after =command= key is clicked, print the following <key> to stdout.
3. =sel.py hk.map...= dump the lines in file =hk.map= which matches pattern given by stdin.
4. =feed2.py= feed the stdin to =trigger.py=, exec =trigger.py= after fork.
5. =trigger.py= do hotkey action select by =sel.py=

* trigger actions
** launch process
: #!open emacs ###emacs

** open url
: #!url http://127.0.0.1:9111/xboard/capture.org ###view

** send text(emulate key sequence)
: #!send gpg_decrypt('~/.pass.gpg') ###pass

** select line from common used snippets
: #!eval cat snippet.txt | ./filt.py ###z
here =filt.py= will popup a window, and show snippets, the selected snippet will be print to stdout by =filt.py=

with =#!eval= ,snippet will be treat as trigger action again,  in this case, the text is send to focused window.

** capture select text/img
and save to =mac-hotkey/capture.org=
: #!python do_capture(self) ###capture

** send select text to script
and show result in popup message box.
: #!msg echo '$text' | ~/bin/conv.py guess ###query
